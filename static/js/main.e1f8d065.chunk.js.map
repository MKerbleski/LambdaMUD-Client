{"version":3,"sources":["components/auth/authForm.js","components/auth/auth.js","components/game.js","App.js","index.js"],"names":["AuthForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputHandler","e","preventDefault","setState","defineProperty","target","name","value","sendCreds","creds","username","state","password","register","password2","password1","axios","post","then","res","localStorage","setItem","data","key","history","push","catch","err","console","log","response","react_default","a","createElement","AuthFormDiv","onSubmit","autoFocus","placeholder","onChange","type","style","visibility","Component","withRouter","styled","div","_templateObject","Auth","toggle","AuthDiv","className","onClick","textDecoration","authForm","auth_templateObject","Game","startGame","userToken","getItem","authHeader","headers","Authorization","concat","get","startPusher","uuid","user","newEvent","time","Date","now","fromServer","toConsumableArray","sendCommand","command","substr","message","slice","direction","logout","removeItem","Redirect","to","playerChannel","_this2","Pusher","cluster","forceTLS","subscribe","bind","GameDiv","length","map","update","i","moment","format","Fragment","title","players","player","description","game_templateObject","App","loggedIn","AppDiv","from","Route","path","component","App_templateObject","ReactDOM","render","BrowserRouter","App_App","document","getElementById"],"mappings":"owBAKMA,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQVQ,aAAe,SAACC,GACZA,EAAEC,iBACFT,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKO,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,SAZhBd,EAgBlBe,UAAY,SAACP,GACTA,EAAEC,iBACF,IAAIO,EAAQ,CACRC,SAAUjB,EAAKkB,MAAMD,SACrBE,SAAUnB,EAAKkB,MAAMC,WAEE,IAAxBnB,EAAKD,MAAMqB,UACVJ,EAAMK,UAAYrB,EAAKkB,MAAMG,UAC7BL,EAAMM,UAAYtB,EAAKkB,MAAMC,gBACtBH,EAAMG,SACbI,IAAMC,KAAK,wDAAyDR,GAAOS,KAAK,SAAAC,GAC5EC,aAAaC,QAAQ,MAAOF,EAAIG,KAAKC,KACrC9B,EAAKD,MAAMgC,QAAQC,KAAK,WACzBC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAIG,YAEpBrC,EAAKU,SAAS,CACVO,SAAU,GACVE,SAAU,GACVE,UAAW,OAGfE,IAAMC,KAAK,iDAAkDR,GAAOS,KAAK,SAAAC,GACrEC,aAAaC,QAAQ,MAAOF,EAAIG,KAAKC,KACrC9B,EAAKD,MAAMgC,QAAQC,KAAK,WACzBC,MAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAIG,YAEpBrC,EAAKU,SAAS,CACVO,SAAU,GACVE,SAAU,OA5ClBnB,EAAKkB,MAAQ,CACTD,SAAU,GACVE,SAAU,GACVE,UAAW,IALDrB,wEAoDd,OACIsC,EAAAC,EAAAC,cAACC,EAAD,KACIH,EAAAC,EAAAC,cAAA,QAAME,SAAUvC,KAAKY,WACjBuB,EAAAC,EAAAC,cAAA,SAAOG,WAAS,EAACC,YAAY,kBAAkBC,SAAU1C,KAAKI,aAAcM,KAAK,WAAWC,MAAOX,KAAKe,MAAMD,SAAU6B,KAAK,QAAQ3C,KAAKW,OAC1IwB,EAAAC,EAAAC,cAAA,SAAOI,YAAY,kBAAkBC,SAAU1C,KAAKI,aAAcM,KAAK,WAAWC,MAAOX,KAAKe,MAAMC,SAAU2B,KAAK,YAAY3C,KAAKW,OACpIwB,EAAAC,EAAAC,cAAA,SAAOO,MAAO,CAACC,WAAY7C,KAAKJ,MAAMqB,SAAW,KAAO,UAAYwB,YAAY,mBAAmBC,SAAU1C,KAAKI,aAAcM,KAAK,YAAYC,MAAOX,KAAKe,MAAMG,UAAWyB,KAAK,YAAY3C,KAAKW,OACpMwB,EAAAC,EAAAC,cAAA,SAAOM,KAAK,oBA3DTG,aAkERC,cAAWpD,GAEpB2C,EAAcU,IAAOC,IAAVC,0hBCrEIC,cACjB,SAAAA,EAAYvD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,IACdtD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqD,GAAAhD,KAAAH,KAAMJ,KAMVwD,OAAS,SAAC/C,GACe,aAAlBA,EAAEI,OAAOC,KACRb,EAAKU,SAAS,CACVU,UAAU,IAGdpB,EAAKU,SAAS,CACVU,UAAU,KAZlBpB,EAAKkB,MAAQ,CACTE,UAAU,GAHApB,wEAmBd,OACIsC,EAAAC,EAAAC,cAACgB,EAAD,KACIlB,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,YACXnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,WACXnB,EAAAC,EAAAC,cAAA,UAAQkB,QAASvD,KAAKoD,OAAQ1C,KAAK,QAAQkC,MAAO,CAACY,eAAkBxD,KAAKe,MAAME,SAAW,OAAQ,cAAnG,SACAkB,EAAAC,EAAAC,cAAA,UAAQkB,QAASvD,KAAKoD,OAAQ1C,KAAK,WAAWkC,MAAO,CAACY,eAAkBxD,KAAKe,MAAME,SAAW,YAAa,SAA3G,aAEJkB,EAAAC,EAAAC,cAACoB,EAAD,CAAU7D,MAAOI,KAAKJ,MAAOqB,WAAUjB,KAAKe,MAAME,oBA5BpC6B,aAmC5BO,EAAUL,IAAOC,IAAVS,szDChCQC,cACjB,SAAAA,EAAY/D,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACd9D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAxD,KAAAH,KAAMJ,KAeVgE,UAAY,WACR,IAAIC,EAAYrC,aAAasC,QAAQ,OACjCC,EAAa,CACbC,QAAS,CACLC,cAAa,SAAAC,OAAWL,KAGhCzC,IAAM+C,IAAI,qDAAsDJ,GAAYzC,KAAK,SAAAC,GAC7E1B,EAAKuE,YAAY7C,EAAIG,KAAK2C,MAC1BxE,EAAKU,SAAS,CAAC+D,KAAM/C,EAAIG,OACzB7B,EAAK0E,SAAShD,EAAIG,QACnBI,MAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAIG,aA5BNrC,EA4ClB0E,SAAW,SAAC7C,GACRA,EAAK8C,KAAOC,KAAKA,KAAKC,OACtB7E,EAAKU,SAAS,CACVoE,WAAW7E,OAAA8E,EAAA,EAAA9E,CAAKD,EAAKkB,MAAM4D,YAAjBT,OAAA,CAA6BxC,OA/C7B7B,EAmDlBO,aAAe,SAACC,GACZA,EAAEC,iBACFT,EAAKU,SAALT,OAAAU,EAAA,EAAAV,CAAA,GACKO,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,SAtDhBd,EA0DlBgF,YAAc,SAACxE,GACXA,EAAEC,iBACF,IAMIwE,EANAjB,EAAYrC,aAAasC,QAAQ,OACjCC,EAAa,CACbC,QAAS,CACLC,cAAa,SAAAC,OAAWL,KAIM,QAAnChE,EAAKkB,MAAM+D,QAAQC,OAAO,EAAE,IAE3BD,EAAU,CAACE,QADMnF,EAAKkB,MAAM+D,QAAQG,MAAM,IAE1C7D,IAAMC,KAAN,oDAAiEyD,EAAUf,GAAazC,KAAK,SAAAC,GACzF1B,EAAK0E,SAAShD,EAAIG,QACnBI,MAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAIG,cAGpB4C,EAAU,CAACI,UAAarF,EAAKkB,MAAM+D,SACnC1D,IAAMC,KAAN,qDAAkEyD,EAAUf,GAAazC,KAAK,SAAAC,GAE1F1B,EAAK0E,SAAShD,EAAIG,QACnBI,MAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAIG,aAGxBrC,EAAKU,SAAS,CACVuE,QAAS,MArFCjF,EAyFlBsF,OAAS,SAAC9E,GACNA,EAAEC,iBACFkB,aAAa4D,WAAW,OACxBvF,EAAKD,MAAMgC,QAAQC,KAAK,MA1FxBhC,EAAKkB,MAAQ,CACT+D,QAAS,GACTH,WAAY,IAJF9E,mFASd,IAAK2B,aAAasC,QAAQ,OACtB,OAAO3B,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAUC,GAAG,MAEpBtF,KAAK4D,gDAoBD2B,GAAc,IAAAC,EAAAxF,KACT,IAAIyF,IAAO,uBAAwB,CAC5CC,QAAS,MACTC,UAAU,IAEOC,UAAP,aAAA1B,OAA8BqB,IACpCM,KAAK,YAAa,SAAAnE,GACtB8D,EAAKjB,SAAS7C,sCAyDlB,OAAG1B,KAAKe,MAAMuD,KAENnC,EAAAC,EAAAC,cAACyD,EAAD,KACI3D,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,UAAQkB,QAASvD,KAAKmF,QAAtB,UAAsCnF,KAAKe,MAAMuD,KAAK5D,OAE1DyB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,eACVtD,KAAKe,MAAM4D,WAAWoB,OAAS,EAAI/F,KAAKe,MAAM4D,WAAWqB,IAAI,SAACC,EAAQC,GACnE,OACI/D,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACXnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gBACXnB,EAAAC,EAAAC,cAAA,SAAI8D,IAAOF,EAAOzB,MAAM4B,OAAO,QAC9BH,EAAOjB,SAAWiB,EAAO/D,SACtBC,EAAAC,EAAAC,cAAA,YAAO4D,EAAOjB,QAASiB,EAAO/D,UAC9BC,EAAAC,EAAAC,cAACF,EAAAC,EAAMiE,SAAP,KACIlE,EAAAC,EAAAC,cAAA,SAAI4D,EAAOK,OACVL,EAAOM,SAAWN,EAAOM,QAAQR,OAAS,EACvC5D,EAAAC,EAAAC,cAAA,qBAAa4D,EAAOM,QAAQP,IAAI,SAAAQ,GAAM,OAAIrE,EAAAC,EAAAC,cAAA,YAAOmE,EAAP,SAC1C,OAIhBrE,EAAAC,EAAAC,cAAA,OAAKV,IAAKuE,EAAG5C,UAAU,iBACnBnB,EAAAC,EAAAC,cAAA,SAAI4D,EAAOQ,iBAItB,MAETtE,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,QAAME,SAAUvC,KAAK6E,aACjB1C,EAAAC,EAAAC,cAAA,SAAOG,WAAS,EAACC,YAAY,eAAeC,SAAU1C,KAAKI,aAAcM,KAAK,UAAUC,MAAOX,KAAKe,MAAM+D,QAASnC,KAAK,QAAQ3C,KAAKW,QAEzIwB,EAAAC,EAAAC,cAAA,UAAQkB,QAASvD,KAAK6E,aAAtB,YAKL,YAxIe/B,aA6I5BgD,EAAU9C,IAAOC,IAAVyD,4JC9IQC,6MACnB5F,MAAQ,CACN6F,UAAU,sFAIPpF,aAAasC,QAAQ,OACtB9D,KAAKO,SAAS,CACZqG,UAAU,IAGZ5G,KAAKO,SAAS,CACZqG,UAAU,qCAMd,OACEzE,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACbnB,EAAAC,EAAAC,cAACwE,EAAD,KACGrF,aAAasC,QAAQ,OAAS3B,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAUyB,KAAK,IAAIxB,GAAG,UAAanD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAUyB,KAAK,IAAIxB,GAAG,UACxFnD,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWtD,IAC/BxB,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW9D,aAvBRL,aA8B3B+D,EAAQ7D,IAAOC,IAATiE,aC9BZC,IAASC,OACLjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACIlF,EAAAC,EAAAC,cAACiF,EAAD,OACcC,SAASC,eAAe","file":"static/js/main.e1f8d065.chunk.js","sourcesContent":["import React , { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass AuthForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            password2: '',\r\n        }\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    sendCreds = (e) => {\r\n        e.preventDefault();\r\n        let creds = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        }\r\n        if(this.props.register === true){\r\n            creds.password2 = this.state.password2\r\n            creds.password1 = this.state.password\r\n            delete creds.password\r\n            axios.post('https://lambda-mud-mjk.herokuapp.com/api/registration', creds).then(res => {\r\n                localStorage.setItem('MUD', res.data.key)\r\n                this.props.history.push('/game')\r\n            }).catch(err => {\r\n                console.log(err.response)\r\n            })\r\n            this.setState({\r\n                username: '',\r\n                password: '',\r\n                password2: '',\r\n            })\r\n        } else {\r\n            axios.post('https://lambda-mud-mjk.herokuapp.com/api/login', creds).then(res => {\r\n                localStorage.setItem('MUD', res.data.key)\r\n                this.props.history.push('/game')\r\n            }).catch(err => {\r\n                console.log(err.response)\r\n            })\r\n            this.setState({\r\n                username: '',\r\n                password: '',\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <AuthFormDiv> \r\n                <form onSubmit={this.sendCreds}>\r\n                    <input autoFocus placeholder=\"enter: username\" onChange={this.inputHandler} name=\"username\" value={this.state.username} type=\"text\">{this.value}</input>\r\n                    <input placeholder=\"enter: password\" onChange={this.inputHandler} name=\"password\" value={this.state.password} type=\"password\">{this.value}</input>\r\n                    <input style={{visibility: this.props.register ? null : 'hidden'} } placeholder=\"enter: password2\" onChange={this.inputHandler} name=\"password2\" value={this.state.password2} type=\"password\">{this.value}</input>\r\n                    <input type=\"submit\" />\r\n                </form>\r\n            </AuthFormDiv>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AuthForm)\r\n\r\nconst AuthFormDiv = styled.div`\r\n    form {\r\n        margin: 5px;\r\n        padding: 5px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        input {\r\n            border: 1px solid red;\r\n            margin: 2px;\r\n            background: black;\r\n            border: 0;\r\n            color: green;\r\n            &:hover{\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n    }\r\n`","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport AuthForm from './authForm.js';\r\n\r\nexport default class Auth extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            register: false\r\n        }\r\n    }\r\n\r\n    toggle = (e) => {\r\n        if(e.target.name === \"register\"){\r\n            this.setState({\r\n                register: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                register: false\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <AuthDiv>\r\n                <h1>MUD</h1>\r\n                <div className=\"auth-box\">\r\n                    <div className='buttons'>\r\n                        <button onClick={this.toggle} name='login' style={{'textDecoration': this.state.register ? 'none': 'underline'}}>login</button>\r\n                        <button onClick={this.toggle} name='register' style={{'textDecoration': this.state.register ? 'underline': 'none'}}>register</button>\r\n                    </div>\r\n                    <AuthForm props={this.props} register={this.state.register ? true : false} />\r\n                </div>\r\n            </AuthDiv>\r\n        )\r\n    }\r\n}\r\n\r\nconst AuthDiv = styled.div`\r\n    background: black;\r\n    color: green;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    .auth-box{\r\n        border: 1px solid green;\r\n        .buttons{\r\n                background: green;\r\n            button{\r\n                background: green;\r\n                padding: 5px;\r\n                border: none;\r\n                margin: 0;\r\n            }\r\n        }\r\n    }\r\n`;","import React , { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport Pusher from 'pusher-js';\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nexport default class Game extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            command: '',\r\n            fromServer: []\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        if (!localStorage.getItem('MUD')){\r\n            return <Redirect to=\"/\" />\r\n        } else {\r\n            this.startGame()\r\n        }\r\n    }\r\n\r\n    startGame = () => {\r\n        let userToken = localStorage.getItem('MUD')\r\n        let authHeader = {\r\n            headers: {\r\n                Authorization: `Token ${userToken}`\r\n            }\r\n        }\r\n        axios.get('https://lambda-mud-mjk.herokuapp.com/api/adv/init/', authHeader).then(res => {   \r\n            this.startPusher(res.data.uuid)\r\n            this.setState({user: res.data})\r\n            this.newEvent(res.data)\r\n        }).catch(err => {\r\n            console.log(err.response)\r\n        })\r\n    }\r\n\r\n    startPusher(playerChannel){\r\n        let pusher = new Pusher('4830aec0ca635aa67084', {\r\n            cluster: 'us2',\r\n            forceTLS: true\r\n        });\r\n        let channel = pusher.subscribe(`p-channel-${playerChannel}`);\r\n        channel.bind('broadcast', data => {\r\n            this.newEvent(data) \r\n        });\r\n        \r\n    }\r\n\r\n    newEvent = (data) => {\r\n        data.time = Date(Date.now())\r\n        this.setState({\r\n            fromServer: [...this.state.fromServer, data]\r\n        })\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    sendCommand = (e) => {\r\n        e.preventDefault()\r\n        let userToken = localStorage.getItem('MUD')\r\n        let authHeader = {\r\n            headers: {\r\n                Authorization: `Token ${userToken}`\r\n            }\r\n        }\r\n        let command\r\n        if(this.state.command.substr(0,3) === 'say'){\r\n            let newCommand = this.state.command.slice(4,)\r\n            command = {\"message\": newCommand}\r\n            axios.post(`https://lambda-mud-mjk.herokuapp.com/api/adv/say/`, (command), authHeader ).then(res => {\r\n                this.newEvent(res.data) \r\n            }).catch(err => {\r\n                console.log(err.response)\r\n            })\r\n        } else {\r\n            command = {\"direction\": this.state.command}\r\n            axios.post(`https://lambda-mud-mjk.herokuapp.com/api/adv/move/`, (command), authHeader ).then(res => {\r\n\r\n                this.newEvent(res.data) \r\n            }).catch(err => {\r\n                console.log(err.response)\r\n            })\r\n        }\r\n        this.setState({\r\n            command: ''\r\n        })\r\n    }\r\n\r\n    logout = (e) => {\r\n        e.preventDefault();\r\n        localStorage.removeItem('MUD') \r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render(){\r\n        if(this.state.user){\r\n            return (\r\n                <GameDiv> \r\n                    <header>\r\n                        <h1>MUD</h1>\r\n                        <button onClick={this.logout}>logout {this.state.user.name}</button>\r\n                    </header>\r\n                    <div className=\"updates-bin\">\r\n                        {this.state.fromServer.length > 0 ? this.state.fromServer.map((update, i )=> {\r\n                            return (\r\n                                <div className='event'>\r\n                                    <div className=\"updates-left\">\r\n                                        <p>{moment(update.time).format('LLL')}</p>\r\n                                        {update.message || update.response ? \r\n                                            <span>{update.message}{update.response}</span> : \r\n                                            <React.Fragment>\r\n                                                <p>{update.title}</p> \r\n                                                {update.players && update.players.length > 0 ?\r\n                                                    <span> with {update.players.map(player => <span>{player}, </span>)}</span> :\r\n                                                    null}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    </div>\r\n                                    <div key={i} className=\"updates-right\">\r\n                                        <p>{update.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }) : null}\r\n                    </div>\r\n                    <footer>\r\n                        <form onSubmit={this.sendCommand}>\r\n                            <input autoFocus placeholder=\"type command\" onChange={this.inputHandler} name=\"command\" value={this.state.command} type=\"text\">{this.value}</input>\r\n                        </form>\r\n                        <button onClick={this.sendCommand}>submit</button>\r\n                    </footer>\r\n                </GameDiv>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nconst GameDiv = styled.div`\r\n    background: black;\r\n    color: green;\r\n    height: 90%;\r\n    header{\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        button{\r\n            color: green;\r\n            border: 1px solid green;\r\n            background: black;\r\n            width: 25%;\r\n            height: 25%;\r\n        }\r\n        h1 {\r\n            width: 100%;\r\n        }\r\n    }\r\n    footer{\r\n        display: flex;\r\n        flex-direction: row;\r\n        height: 35px;\r\n        box-sizing: border-box;\r\n        padding: 1px;\r\n        form {\r\n            width: 100%;\r\n            box-sizing: border-box;\r\n            height: 30px;\r\n            input{\r\n                width: 100%;\r\n                background: black;\r\n                color: green;\r\n                border: none;\r\n                &:focus{\r\n                    border: 1px solid green;\r\n                }\r\n            }\r\n        }\r\n        button {\r\n            color: green;\r\n            border: 1px solid green;\r\n            background: black;\r\n            width: 25%;\r\n            height: 30px;\r\n        }\r\n    }\r\n    .updates-bin{\r\n        overflow: auto;\r\n        height: 70vh;\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        .event{\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: space-between;\r\n            .updates-left{\r\n                border: 1px solid green\r\n                min-width: 35%;\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: flex-start\r\n            }\r\n            .updates-right{\r\n                width: 100%;\r\n                border: 1px solid green\r\n            }\r\n        }\r\n    }\r\n`","import React, { Component } from 'react';\nimport { Route, Redirect} from 'react-router-dom'\nimport { Auth, Game } from './components'\nimport './App.css';\nimport styled from 'styled-components'\n\nexport default class App extends Component {\n  state = {\n    loggedIn: false,\n  }\n\n  componentDidMount(){\n    if(localStorage.getItem('MUD')){\n      this.setState({\n        loggedIn: true,\n      })\n    } else {\n      this.setState({\n        loggedIn: false,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AppDiv>\n          {localStorage.getItem('MUD') ? <Redirect from=\"/\" to=\"/game\" /> : <Redirect from=\"/\" to=\"/auth\" />}\n          <Route path=\"/game\" component={Game} />\n          <Route path=\"/auth\" component={Auth}></Route>         \n        </AppDiv>\n      </div>\n    );\n  }\n}\n\nconst AppDiv =styled.div`\n  height: 100%;\n  background: black;\n  color: green;\n  margin: 0;\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter }from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}